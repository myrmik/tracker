CREATE TABLE IF NOT EXISTS SERIAL
(
  ID              INT PRIMARY KEY IDENTITY,
  NAME            VARCHAR(200)  NOT NULL,
  PUBLISH_DATE    TIMESTAMP,
  PUBLISH_EPISODE INT DEFAULT 0 NOT NULL
);

CREATE TABLE IF NOT EXISTS USER_SERIAL
(
  ID           INT PRIMARY KEY IDENTITY,
  NAME         VARCHAR(200) NOT NULL,
  EPISODE      VARCHAR(4),
  LAST_UPDATED TIMESTAMP,
  SERIAL_ID    INT          NOT NULL,
  FOREIGN KEY (SERIAL_ID) REFERENCES SERIAL (ID)
);

CREATE TABLE IF NOT EXISTS USER_SERIAL_NOTIFICATION
(
  ID             INT PRIMARY KEY IDENTITY,
  TYPE           VARCHAR(100)               NOT NULL,
  EPISODE        VARCHAR(4),
  LAST_UPDATED   TIMESTAMP,
  READ           VARCHAR(5) DEFAULT 'false' NOT NULL,
  USER_SERIAL_ID INT,
  FOREIGN KEY (USER_SERIAL_ID) REFERENCES USER_SERIAL (ID)
);

CREATE TABLE IF NOT EXISTS SERIAL_INFO
(
  ID               INT PRIMARY KEY IDENTITY,
  NAME             VARCHAR(200) NOT NULL,
  GENRE            VARCHAR(200),
  SIZE             INT,
  DURATION         INT,
  POSTER_URL       VARCHAR(200),
  COMPANY_LOGO_URL VARCHAR(200),
  SERIAL_ID        INT          NOT NULL,
  FOREIGN KEY (SERIAL_ID) REFERENCES SERIAL (ID)
);

CREATE TABLE IF NOT EXISTS SERIAL_COMMENT
(
  ID             INT PRIMARY KEY IDENTITY,
  AUTHOR         VARCHAR(200) NOT NULL,
  CONTENT        CLOB,
  PUBLISH_DATE   TIMESTAMP,
  SERIAL_INFO_ID INT          NOT NULL,
  FOREIGN KEY (SERIAL_INFO_ID) REFERENCES SERIAL_INFO (ID)
);